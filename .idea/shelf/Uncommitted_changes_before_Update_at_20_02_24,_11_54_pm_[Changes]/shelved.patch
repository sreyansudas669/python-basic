Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"fe4ab1ab-1c72-4d10-83fb-808777ebe33f\" name=\"Changes\" comment=\"\">\n      <change afterPath=\"$PROJECT_DIR$/.idea/basic  nonlocal.py.iml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/modules.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change afterPath=\"$PROJECT_DIR$/main.py\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"ProjectColorInfo\"><![CDATA[{\n  \"associatedIndex\": 4\n}]]></component>\n  <component name=\"ProjectId\" id=\"2cZWr2MuNxvg0wkh2RkGL5SfC4m\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"Python.main.executor\": \"Run\",\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"git-widget-placeholder\": \"master\"\n  }\n}]]></component>\n  <component name=\"RunManager\">\n    <configuration name=\"main\" type=\"PythonConfigurationType\" factoryName=\"Python\" nameIsGenerated=\"true\">\n      <module name=\"basic  nonlocal.py\" />\n      <option name=\"ENV_FILES\" value=\"\" />\n      <option name=\"INTERPRETER_OPTIONS\" value=\"\" />\n      <option name=\"PARENT_ENVS\" value=\"true\" />\n      <envs>\n        <env name=\"PYTHONUNBUFFERED\" value=\"1\" />\n      </envs>\n      <option name=\"SDK_HOME\" value=\"\" />\n      <option name=\"WORKING_DIRECTORY\" value=\"$PROJECT_DIR$\" />\n      <option name=\"IS_MODULE_SDK\" value=\"true\" />\n      <option name=\"ADD_CONTENT_ROOTS\" value=\"true\" />\n      <option name=\"ADD_SOURCE_ROOTS\" value=\"true\" />\n      <option name=\"SCRIPT_NAME\" value=\"$PROJECT_DIR$/main.py\" />\n      <option name=\"PARAMETERS\" value=\"\" />\n      <option name=\"SHOW_COMMAND_LINE\" value=\"false\" />\n      <option name=\"EMULATE_TERMINAL\" value=\"false\" />\n      <option name=\"MODULE_MODE\" value=\"false\" />\n      <option name=\"REDIRECT_INPUT\" value=\"false\" />\n      <option name=\"INPUT_FILE\" value=\"\" />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-python-sdk-5a2391486177-d3b881c8e49f-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-233.13763.11\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"fe4ab1ab-1c72-4d10-83fb-808777ebe33f\" name=\"Changes\" comment=\"\" />\n      <created>1708319775775</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1708319775775</updated>\n    </task>\n    <servers />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 20f74531fbef6f94d3ef34702c4d03bcb420cc83)
+++ b/.idea/workspace.xml	(date 1708453413761)
@@ -4,26 +4,48 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="fe4ab1ab-1c72-4d10-83fb-808777ebe33f" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/basic  nonlocal.py.iml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/profiles_settings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+    <list default="true" id="fe4ab1ab-1c72-4d10-83fb-808777ebe33f" name="Changes" comment="#checking weather is raining or snowing if it is true either of its true">
+      <change afterPath="$PROJECT_DIR$/evenaswellprime.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/async&amp;await.py" beforeDir="false" afterPath="$PROJECT_DIR$/async&amp;await.py" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
     <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Python Script" />
+        <option value="Python Unit Test" />
+      </list>
+    </option>
   </component>
   <component name="Git.Settings">
+    <option name="PREVIOUS_COMMIT_AUTHORS">
+      <list>
+        <option value="sdasworkplace &lt;sreyansudas669@gmail.com&gt;" />
+      </list>
+    </option>
+    <option name="PUSH_TAGS">
+      <GitPushTagMode>
+        <option name="argument" value="--tags" />
+        <option name="title" value="All" />
+      </GitPushTagMode>
+    </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
+    <option name="UPDATE_TYPE" value="REBASE" />
   </component>
-  <component name="ProjectColorInfo"><![CDATA[{
-  "associatedIndex": 4
-}]]></component>
+  <component name="HighlightingSettingsPerFile">
+    <setting file="file://$PROJECT_DIR$/.venv/tryfinal.py" root0="SKIP_INSPECTION" />
+  </component>
+  <component name="MarkdownSettingsMigration">
+    <option name="stateVersion" value="1" />
+  </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 4
+}</component>
   <component name="ProjectId" id="2cZWr2MuNxvg0wkh2RkGL5SfC4m" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
@@ -32,10 +54,25 @@
   </component>
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
+    "Python.async&await.executor": "Run",
+    "Python.basic.executor": "Run",
+    "Python.lambdaandpass.executor": "Run",
     "Python.main.executor": "Run",
+    "Python.nonloacl.executor": "Run",
+    "Python.rainyorsnowing.executor": "Run",
+    "Python.tryfinal.executor": "Run",
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "git-widget-placeholder": "master"
+    "git-widget-placeholder": "master",
+    "last_opened_file_path": "/home/sdasworkplace/PycharmProjects/basic  nonlocal.py"
+  },
+  "keyToStringList": {
+    "ChangesTree.GroupingKeys": [
+      "directory"
+    ],
+    "com.intellij.ide.scratch.ScratchImplUtil$2/New Scratch File": [
+      "Python"
+    ]
   }
 }]]></component>
   <component name="RunManager">
@@ -78,6 +115,122 @@
       <option name="presentableId" value="Default" />
       <updated>1708319775775</updated>
     </task>
+    <task id="LOCAL-00001" summary="basic on the non local in function">
+      <option name="closed" value="true" />
+      <created>1708320391865</created>
+      <option name="number" value="00001" />
+      <option name="presentableId" value="LOCAL-00001" />
+      <option name="project" value="LOCAL" />
+      <updated>1708320391865</updated>
+    </task>
+    <task id="LOCAL-00002" summary="basic on the non local in function">
+      <option name="closed" value="true" />
+      <created>1708320878085</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1708320878085</updated>
+    </task>
+    <task id="LOCAL-00003" summary="basic on the non local in function">
+      <option name="closed" value="true" />
+      <created>1708321063388</created>
+      <option name="number" value="00003" />
+      <option name="presentableId" value="LOCAL-00003" />
+      <option name="project" value="LOCAL" />
+      <updated>1708321063388</updated>
+    </task>
+    <task id="LOCAL-00004" summary="basic on the non local in function">
+      <option name="closed" value="true" />
+      <created>1708357125687</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1708357125687</updated>
+    </task>
+    <task id="LOCAL-00005" summary="basic on the non local in function">
+      <option name="closed" value="true" />
+      <created>1708357155440</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1708357155440</updated>
+    </task>
+    <task id="LOCAL-00006" summary="using is and in keyword to prove weather a all list of fruit is a actual furit or not">
+      <option name="closed" value="true" />
+      <created>1708357385612</created>
+      <option name="number" value="00006" />
+      <option name="presentableId" value="LOCAL-00006" />
+      <option name="project" value="LOCAL" />
+      <updated>1708357385612</updated>
+    </task>
+    <task id="LOCAL-00007" summary="using raise keyword checking weather a function is non negative or not">
+      <option name="closed" value="true" />
+      <created>1708357559723</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1708357559723</updated>
+    </task>
+    <task id="LOCAL-00008" summary="factorial for the not negative which was dont defined in it shows an expected error">
+      <option name="closed" value="true" />
+      <created>1708358377181</created>
+      <option name="number" value="00008" />
+      <option name="presentableId" value="LOCAL-00008" />
+      <option name="project" value="LOCAL" />
+      <updated>1708358377181</updated>
+    </task>
+    <task id="LOCAL-00009" summary="using lambda and pass wap to how to pass a function without writting a body">
+      <option name="closed" value="true" />
+      <created>1708358885797</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1708358885797</updated>
+    </task>
+    <task id="LOCAL-00010" summary="how to delay the code after execution of first code then it will hold the second for the define no seconf where the await gets its work but in async it will sync with the code">
+      <option name="closed" value="true" />
+      <created>1708359591529</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1708359591529</updated>
+    </task>
+    <task id="LOCAL-00011" summary="how to delay the code after execution of first code then it will hold the second for the define no seconf where the await gets its work but in async it will sync with the code">
+      <option name="closed" value="true" />
+      <created>1708453251493</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1708453251493</updated>
+    </task>
+    <task id="LOCAL-00012" summary="how to delay the code after execution of first code then it will hold the second for the define no seconf where the await gets its work but in async it will sync with the code">
+      <option name="closed" value="true" />
+      <created>1708453333228</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1708453333228</updated>
+    </task>
+    <task id="LOCAL-00013" summary="#checking weather is raining or snowing if it is true either of its true">
+      <option name="closed" value="true" />
+      <created>1708453361299</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1708453361299</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
+  <component name="VcsManagerConfiguration">
+    <MESSAGE value=" using true and false keyword wap weather  a function is a even or odd" />
+    <MESSAGE value="basic on the non local in function" />
+    <MESSAGE value="using is and in keyword to prove weather a all list of fruit is a actual furit or not" />
+    <MESSAGE value="using raise keyword checking weather a function is non negative or not" />
+    <MESSAGE value="factorial for the not negative which was dont defined in it shows an expected error" />
+    <MESSAGE value="using lambda and pass wap to how to pass a function without writting a body" />
+    <MESSAGE value="how to delay the code after execution of first code then it will hold the second for the define no seconf where the await gets its work but in async it will sync with the code" />
+    <MESSAGE value="#checking weather is raining or snowing if it is true either of its true" />
+    <option name="LAST_COMMIT_MESSAGE" value="#checking weather is raining or snowing if it is true either of its true" />
+  </component>
 </project>
\ No newline at end of file
Index: async&await.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import asyncio\n\nasync def greet_after_delay(delay):\n    print(\"Hello\")\n    await asyncio.sleep(delay)  # Pause execution for 'delay' seconds\n    print(\"World!\")\n\nasync def main():\n    await greet_after_delay(40)\n\nasyncio.run(main())  # Run the main async function\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/async&await.py b/async&await.py
--- a/async&await.py	(revision 20f74531fbef6f94d3ef34702c4d03bcb420cc83)
+++ b/async&await.py	(date 1708370916368)
@@ -1,11 +1,20 @@
-import asyncio
+if __name__ == '__main__':
+    n = int(input())
+
+    # Create an empty dictionary to store name/marks pairs
+    student_marks = {}
 
-async def greet_after_delay(delay):
-    print("Hello")
-    await asyncio.sleep(delay)  # Pause execution for 'delay' seconds
-    print("World!")
+    # Read the names and marks of each student into the dictionary
+    for _ in range(n):
+        name, *line = input().split()
+        marks = list(map(float, line))
+        student_marks[name] = marks
 
-async def main():
-    await greet_after_delay(40)
+    # Read the query_name
+    query_name = input()
 
-asyncio.run(main())  # Run the main async function
+    # Calculate the average marks for the student with the query_name
+    average_marks = sum(student_marks[query_name]) / len(student_marks[query_name])
+
+    # Print the average marks with 2 decimal places
+    print("{:.2f}".format(average_marks))
